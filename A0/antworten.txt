

Theoriefragen: Systemumgebung

1.

//Alex

Ein Kommando beginnt immer mit einem Namen, der zugleich den Dateinamen darstellt. Wird ein Kommando in die Shell
eingegeben, werden alle Verzeichnisse, die unter der Umgebungsvariablen PATH angegeben sind (es können beliebig viele
angegeben werden) nach dieser Datei durchsucht. Ist diese Suche erfolgreich, kann das Kommando ausgeführt werden,
d.h. das Programm kann ausgeführt werden.


2.

//Alex

Das Kommando man ruft das Handbuch (manual) für Befehle auf. "man 1 printf" gibt dabei die erste Seite des
Handbuches aus, "man 3 printf" die dritte.
    //Inhalte/Abschnitte?


3.

//Kevin hat den Befehl

//Alex

(Vorher zum Ordner navigieren)
grep 'todo' ./* -n


4.

//Alex

(Vorher zum Vereichnis navigieren)
gcc ./Datei.c -o exec.out

5.

//Alex

Mit dem Befehl kann man einerseits Dateien und Ordner umbenennen und andererseits Dateien und Ordner verschieben.

Umbenennen:
(Vorher zum Verzeichnis navigieren, Datei hieß vorher 'alt' und soll 'neu' heißen)
mv ./alt ./neu



Theoriefragen: Variablen in C

1.

//Alex

main():                 text
force():                text
G:                      data
mErde:                  data
distanz:                BSS
f:                      stack
Parameter von force():  stack


2.

//Alex

distanz und mErde sind globale Variablen, allerdings ist distanz nicht initialisiert und gelangt deshalb in das
BSS(Block Storage)-Segment, welches zur Speicherung von uninitialisierten Daten dient. Da mErde initialisiert ist,
findet in diesem Fall eine Speicherung im data-Segment, dem Segment für initialisierte Daten statt.

